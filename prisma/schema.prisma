// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String           @id @default(uuid())
  email          String           @unique
  userName       String?          @unique
  firstName      String?
  lastName       String?
  passwordHash   String
  tokens         Token[]
  emailVerified  Boolean          @default(false)
  UserPermission UserPermission[]

  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @default(now()) @updatedAt
}

model Token {
  id        String   @id @default(uuid())
  token     String
  userId    String
  payload   String?
  active    Boolean?
  user      User     @relation(fields: [userId], references: [id])
  expires   DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EmailTemplate {
  id           String @id @default(uuid())
  templateName String
  subject      String
  template     String @db.LongText

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Role {
  id          String       @id @default(uuid())
  name        String       @unique
  description String?
  permissions Permission[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Permission {
  id             String           @id @default(uuid())
  name           String           @unique
  UserPermission UserPermission[]
  roles          Role[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model UserPermission {
  id           String     @id @default(uuid())
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  permissionId String
  permission   Permission @relation(fields: [permissionId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
